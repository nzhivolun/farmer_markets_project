#!/bin/bash
# ===========================================================
# entrypoint.sh
#
# Этот скрипт выполняется при запуске контейнера (указан в Dockerfile в ENTRYPOINT).
# Его задача:
# 1. Подождать, пока PostgreSQL запустится (чтобы не было ошибок подключения).
# 2. Создать базу данных и таблицы (setup_db.py).
# 3. Загрузить данные из CSV (load_data.py).
# 4. Перевести контейнер в интерактивный режим (bash), чтобы не завершался.
# ===========================================================

# Останавливаем выполнение при любой ошибке
set -e

echo "Ждём запуск PostgreSQL..."
sleep 10
# Задержка в 10 секунд нужна, чтобы база успела полностью запуститься.
# Если сразу запустить setup_db.py, то может быть ошибка "Connection refused".

echo "Инициализация базы данных..."
python setup/setup_db.py
# Этот скрипт создаёт базу данных (если её нет) и таблицы по init.sql.

echo "Загрузка данных..."
python app/load_data.py
# Загружаем данные из CSV-файла Export.csv в нашу базу PostgreSQL.

echo "Запуск приложения..."
exec bash # exec bash запускает интерактивный bash внутри контейнера.
# После выполнения всех шагов контейнер переходит в bash.
# Это значит, что контейнер не завершится сразу и можно будет подключаться внутрь (docker exec).


#Зачем нужен entrypoint.sh?
#Управление стартовой логикой контейнера.
#Docker запускает только один основной процесс. Если мы просто запустим python app/main.py, то:

#Приложение не создаст базу и таблицы.

#Не загрузит данные из CSV.

#Если база ещё не поднялась, всё упадёт с ошибкой.

#Автоматизация развёртывания.
#Вместо того чтобы вручную:

#Ждать, пока поднимется база.

#Создавать таблицы.

#Загружать данные.
#Мы всё делаем автоматически при старте контейнера. """