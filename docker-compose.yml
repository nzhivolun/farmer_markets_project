# docker-compose.yml
# ============================================================
# Этот файл описывает, как запускать несколько контейнеров
# (PostgreSQL + приложение) вместе.
#
# Docker Compose помогает управлять сервисами и их связями.
# ============================================================

version: "3.8"  # версия формата docker-compose (рекомендуемая)

services:  # здесь описываются все контейнеры, которые будут запущены

  # ====================== Сервис базы данных ======================
  db:  # имя сервиса (будем использовать farmer_db в коде)
    image: postgres:15  # образ PostgreSQL версии 15
    container_name: farmer_db  # имя контейнера (удобно для docker exec)
    restart: always  # если контейнер упадёт — перезапустить
    environment:  # переменные окружения для настройки PostgreSQL
      POSTGRES_DB: farmer_markets        # имя базы данных
      POSTGRES_USER: app_user            # имя пользователя
      POSTGRES_PASSWORD: app_pass        # пароль
    ports:
      - "5432:5432"  # пробрасываем порт, чтобы подключаться с хоста
    volumes:
      - pgdata:/var/lib/postgresql/data  # сохраняем данные в volume, чтобы не потерялись

  # ====================== Сервис приложения ======================
  app:
    build: .  # собираем образ из Dockerfile в текущей папке
    container_name: farmer_app  # имя контейнера приложения
    restart: always # если контейнер упадёт — перезапустить
    depends_on:
      - db  # приложение зависит от базы данных (ждём её запуска)
    volumes:
      - .:/app  # монтируем текущую папку внутрь контейнера (для доступа к коду)
    stdin_open: true   # чтобы работал интерактивный режим (input)
    tty: true          # поддержка терминала
    environment:  # передаем настройки подключения к базе
      DB_HOST: db           # имя сервиса db (Docker DNS)
      DB_PORT: 5432
      DB_NAME: farmer_markets
      DB_USER: app_user
      DB_PASSWORD: app_pass
      PYTHONPATH: "/app"  # PYTHONPATH, чтобы Python видел весь проект
    ports:
      - "8501:8501"
# ====================== Хранилище данных PostgreSQL ======================
volumes:
  pgdata:  # это volume, где хранятся данные PostgreSQL (не удаляются при перезапуске контейнера)
