# Dockerfile
# ===========================================================
# Этот файл описывает, как собрать образ для нашего приложения.
# Образ — это шаблон, на основе которого запускается контейнер.
# ===========================================================

# ====================== 1. Базовый образ ======================
FROM python:3.11-slim
# Мы используем минимальный образ Python 3.11 (slim — облегчённая версия)
# В нём уже есть Python, но нет лишних пакетов, чтобы образ был компактным.

# ====================== 2. Рабочая директория ======================
WORKDIR /app
# Устанавливаем рабочую папку внутри контейнера.
# Все команды ниже будут выполняться внутри /app.

# ====================== 3. Копируем зависимости ======================
COPY setup/requirements.txt .
# Копируем файл requirements.txt (список библиотек) в контейнер.

# ====================== 4. Устанавливаем зависимости ======================
RUN pip install --no-cache-dir -r requirements.txt
# Устанавливаем все пакеты, которые указаны в requirements.txt.
# --no-cache-dir — чтобы не хранить кэш и уменьшить размер образа.

# ====================== 5. Копируем весь проект ======================
COPY . .
# Копируем всё содержимое проекта в контейнер (код приложения, скрипты и т.д.)

# ====================== 6. Делаем entrypoint.sh исполняемым ======================
RUN chmod +x entrypoint.sh
# Даем права на выполнение скрипта entrypoint.sh (чтобы Docker мог его запустить).

# ====================== 7. Указываем команду по умолчанию ======================
ENTRYPOINT ["./entrypoint.sh"]
# entrypoint.sh — это скрипт, который будет выполнен при запуске контейнера.
# В нём мы инициализируем базу данных, загружаем данные и запускаем приложение.
